Extended Help
-------------

  ========
  CONCEPTS
  ========

    - <WATCHABLE>

      A watchable is some memory value that the simulator is able to print
      tracing messages for.

      Example:

        READ STRING FROM DATA MEMORY AT SPECIFIED POINTER BY ADDRESS:
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            WATCHABLE = "datamem=0x50=null_terminated=char"

              A null terminated C string starting at RAM address 0x50.

        READ STRING FROM DATA MEMORY BY DEBUG SYMBOL NAME:
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            WATCHABLE = "TEST_BUFFER=null_terminated=char"

              A null terminated C string stored in the ELF symbol 'TEST_BUFFER'.
              The address of the variable will be resolved automatically by the
              simulator if debug info is included in the ELF.

        WATCH IO REGISTERS:
        ~~~~~~~~~~~~~~~~~~~

            Options:
              WATCHABLE = "<io|io-port|io-pin|io-ddr>=<LETTER>[INDEX]"

            Examples:

              WATCHABLE = "io=B"
                Watch all changes on DDRB, PORTB, PINB IO registers.

              WATCHABLE = "io=B3"
                Watch all changes on DDRB, PORTB, PINB IO registers, but only on register index 3.

              WATCHABLE = "io-ddr=B"
                Watch all changes on DDRB.

              WATCHABLE = "io-pin=B2"
                Watch all changes on PORTB index 2.

  ========
  EXAMPLES
  ========

    $ avr-sim test.elf --print-on-change=datamem=0x50=null_terminated=char \
                       --print-after=datamem=0x50=null_terminated=char

      Simulates 'test.elf' tracing the same value in RAM at different times.
      The values are specified by their absolute memory addresses.


    $ avr-sim foo.elf --print-on-change=TEST_BUFFER=null_terminated=char

      Simulates 'test.elf' tracing the 'TEST_BUFFER' variable each time
      it changes.
